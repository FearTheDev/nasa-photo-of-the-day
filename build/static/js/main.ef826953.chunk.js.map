{"version":3,"sources":["components/Loader.jsx","components/DateSelector.jsx","components/Apod.jsx","App.js","index.js"],"names":["Loader","props","LoaderComponent","styled","div","_templateObject","react_default","a","createElement","message","Spinner","style","width","size","height","DateSelector","_useState","useState","Date","_useState2","Object","slicedToArray","startDate","setStartDate","InputGroup","InputGroupAddon","addonType","InputGroupText","className","react_datepicker_min_default","selected","dateFormat","onChange","date","value","fnc","Apod","dataType","copyright","title","description","url","includes","src","frameBorder","undefined","alt","components_DateSelector","components_Loader","App","today","concat","getFullYear","toString","getMonth","padStart","getDate","apod","setApod","_useState3","_useState4","setDate","useEffect","axios","get","then","response","data","catch","error","console","log","components_Apod","explanation","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef826953.chunk.js","sourcesContent":["import React from \"react\";\nimport {Spinner} from 'reactstrap';\nimport styled from 'styled-components';\n\nconst Loader  = props =>{\n\n    const LoaderComponent = styled.div `\n        color: #fff;\n        font-size:3rem;\n        display:flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n        height:100px;\n    `;\n\n    return (\n        <LoaderComponent>\n            <h2>{props.message}</h2>\n            <Spinner style={{ width: props.size, height: props.size }} />\n        </LoaderComponent>\n    );\n\n};\n\nexport default Loader;","import React, {useState} from \"react\";\nimport {InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from 'react-datepicker';\n\n\n\nconst DateSelector = props =>{\n    \n    const [startDate, setStartDate] = useState(new Date());\n\n    const updateCall = value =>{\n        setStartDate(value);\n        props.fnc(value);\n    };\n    \n    return (\n        <div>\n        <InputGroup>\n                \n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText className=\"date-picker-prepend\">Choose a date: </InputGroupText>\n                </InputGroupAddon>\n                <DatePicker className=\"date-picker\" selected={startDate} dateFormat=\"yyyy-MM-dd\" onChange={ date => updateCall(date) }/>\n        </InputGroup>\n        </div>\n    );\n\n};\n\nexport default DateSelector;","import React from \"react\";\nimport Loader from \"./Loader\";\nimport DateSelector from \"./DateSelector\";\n\nconst Apod = props =>{\n\n    const {title, description, url} = props;\n\n\n    // If the props have not yet been populated then display a loader component.\n    if(!props.url) return (\n        <div className=\"display-body\">\n            <Loader message=\"Retrieving data from NASA API..\" size=\"2rem\"/>\n        </div>\n        );\n\n    \n    let dataType;\n    \n    if(props.url.includes('youtube') || props.url.includes('ustream') || props.url.includes('vimeo')){\n        dataType = <iframe title={title} src={url} width=\"100%\" height=\"100%\" frameBorder=\"0\"></iframe>\n    }else if(props.url === undefined){\n        dataType = <h1>No image available for this day!</h1>;\n    }else{  \n        dataType = <img src={url} alt={title} />\n    }\n\n    let copyright;\n    if(props.copyright === undefined){\n        copyright = 'National Aeronautics and Space Administration';\n    }else{\n        copyright = props.copyright;\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"display-header\">\n                <h1>Astronomy Picture Of The Day</h1>\n                <DateSelector fnc={props.fnc}/>\n            </div>\n            <div className=\"display-body\">\n                \n                {dataType}\n                <div className=\"display-description\">\n                    <h3>{title} picture provided by {copyright}</h3>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Apod;","import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Apod from \"./components/Apod\";\nimport axios from \"axios\";\n\nfunction App() {\n  \n  // Establish a starting point from today's date.\n  let today = new Date();\n  today = `${today.getFullYear().toString()}-${(today.getMonth()+ 1).toString().padStart(2,0)}-${today.getDate().toString().padStart(2,0)}`;\n\n  const [apod, setApod] = useState({});\n  const [date, setDate] = useState(today);\n\n  const API_KEY = \"aW1jfVXXw65uyhdPe2exJVbGtv8uNAUmdHxJGhA7\"; \n\n  // Fetch the NASA Astronomy Picture of the Day from NASA API for selected date.\n  useEffect( () =>{\n    axios.get(`https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&date=${date}`)\n      .then(response => {\n        setApod(response.data);\n      })\n        .catch(error => console.log(`Error: ${error}`));\n  }, [date]);\n\n  // Update the date on change of the selected date in the calendar.\n  const updateDate = value =>{\n    setDate(`${value.getFullYear().toString()}-${(value.getMonth()+ 1).toString().padStart(2,0)}-${value.getDate().toString().padStart(2,0)}`);\n  };\n\n  // Render the Astronomy Picture of the Day to view.\n  return (\n    <div className=\"App\">\n      <Apod title={apod.title} description={apod.explanation} url={apod.url} copyright={apod.copyright} fnc={updateDate}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}